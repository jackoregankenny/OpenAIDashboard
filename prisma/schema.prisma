// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// Schools (multi-tenant)
model School {
  id            String   @id @default(cuid())
  name          String
  subdomain     String   @unique
  customDomain  String?  @unique
  settings      String   @default("{}") // JSON
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  sites         Site[]
  themes        Theme[]
  assets        Asset[]
  importJobs    ImportJob[]

  @@index([subdomain])
  @@index([customDomain])
}

// Sites (multiple per school)
model Site {
  id            String   @id @default(cuid())
  schoolId      String
  name          String
  isPublished   Boolean  @default(false)
  publishedAt   DateTime?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  school        School   @relation(fields: [schoolId], references: [id], onDelete: Cascade)
  pages         Page[]

  @@index([schoolId])
  @@index([isPublished])
}

// Pages
model Page {
  id            String   @id @default(cuid())
  siteId        String
  slug          String
  title         String
  description   String?
  pageTree      String   // JSON - the PageNode tree structure
  seo           String   @default("{}") // JSON - SEO metadata
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  publishedAt   DateTime?
  version       Int      @default(1)

  site          Site     @relation(fields: [siteId], references: [id], onDelete: Cascade)

  @@unique([siteId, slug])
  @@index([siteId])
  @@index([slug])
}

// Themes (color palettes, typography)
model Theme {
  id            String   @id @default(cuid())
  schoolId      String
  name          String
  sourceType    String   // 'logo', 'website', 'manual'
  sourceRef     String?  // URL or asset ID
  config        String   // JSON - complete theme config
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  school        School   @relation(fields: [schoolId], references: [id], onDelete: Cascade)

  @@index([schoolId])
}

// Assets (images, files)
model Asset {
  id            String   @id @default(cuid())
  schoolId      String
  url           String
  type          String   // 'image', 'video', 'document'
  metadata      String   @default("{}") // JSON - size, dimensions, etc.
  createdAt     DateTime @default(now())

  school        School   @relation(fields: [schoolId], references: [id], onDelete: Cascade)

  @@index([schoolId])
  @@index([type])
}

// Import Jobs (website scraping)
model ImportJob {
  id            String   @id @default(cuid())
  schoolId      String
  sourceUrl     String
  status        String   // 'pending', 'processing', 'completed', 'failed'
  extractedData String   @default("{}") // JSON
  error         String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  completedAt   DateTime?

  school        School   @relation(fields: [schoolId], references: [id], onDelete: Cascade)

  @@index([schoolId])
  @@index([status])
}
